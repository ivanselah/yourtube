{"version":3,"sources":["components/video_list/video_list.module.css","components/video_loader/video_loader.module.css","components/video_detail/video_detail.module.css","components/video_item/video_item.module.css","components/video_hamburger/hamburger.module.css","components/video_item/video_item.jsx","components/video_loader/video_loader.jsx","components/video_list/video_list.jsx","components/video_hamburger/hamburger.jsx","components/video_search/video_search.jsx","components/video_detail/video_detail.jsx","app.jsx","index.js","service/youtubeApi.js","components/video_search/video_search.module.css"],"names":["module","exports","VideoItem","video","onSelected","parseIntView","diffDate","snippet","className","styles","container","onClick","window","scrollTo","thumbanils","src","thumbnails","high","url","alt","metadata","title","length","substr","channel","channelTitle","count","statistics","viewCount","publishedAt","Loader","loaderContainer","loader","VideoList","scrollTargetRef","isLoading","videos","searchCheck","videosContainer","map","videoId","id","ref","targetObserver","React","memo","HamburgerMenu","hamburgerMenu","item","href","blind","maker","VideoSearch","onSearch","inputRef","useRef","useState","isOpen","setOpen","handleSearch","current","value","navbar","hamburger","toggled","toggle","size","moveHome","logo","form","type","placeholder","onKeyPress","event","key","defaultUser","VideoDetail","youtubeId","comments","selectedVideo","index","setIndex","backgroundColors","clickVideoList","Math","floor","random","randomColor","detail","player","allow","frameBorder","description","tags","tag","test","views","replace","split","likeUnlike","likeCount","like","dislikeCount","unlike","channelBox","channelIcon","style","backgroundColor","comment","commentCount","commentIndex","commentBox","commentIcon","authorDisplayName","commentText","textOriginal","videoList","medium","hoverVideo","App","youtube","setVideos","popularVideos","setPopularVideos","searchQ","setSearchQ","nextPageTok","setNextPageTok","videosKey","setVideosKey","setSelectedVideo","setComments","setYoutubeId","setSearchCheck","setIsLoading","useEffect","initialRander","createObserver","a","mostPopular","items","data","target","IntersectionObserver","entries","observer","isIntersecting","nextTokenVideos","disconnect","root","threshold","observe","keyword","nextSearch","results","overlap","filter","includes","nextToken","nextPageToken","onScrollCount","view","parseInt","useCallback","date","diff","Date","getTime","getComments","topLevelComment","Promise","all","searchCount","response","addVideos","onSearchCount","search","preToken","api","get","params","part","chart","maxResults","q","nextPageTo","pageToken","textFormat","order","this","axios","create","baseURL","regionCode","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3beb228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videosContainer\":\"video_list_videosContainer__1xnYg\",\"videos\":\"video_list_videos__Yrm50\",\"targetObserver\":\"video_list_targetObserver__3WFAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"video_loader_loaderContainer__1q92b\",\"loader\":\"video_loader_loader__1lNy1\",\"spin\":\"video_loader_spin__d0J_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__EPwT-\",\"player\":\"video_detail_player__JtptY\",\"description\":\"video_detail_description__I1llW\",\"tags\":\"video_detail_tags__2kMUl\",\"statistics\":\"video_detail_statistics__1CPMF\",\"views\":\"video_detail_views__2_RRZ\",\"likeUnlike\":\"video_detail_likeUnlike__cUArj\",\"like\":\"video_detail_like__2710G\",\"channelBox\":\"video_detail_channelBox__1gOjq\",\"channelIcon\":\"video_detail_channelIcon__3yEY3\",\"channelTitle\":\"video_detail_channelTitle__3PqAm\",\"videoList\":\"video_detail_videoList__iSN_8\",\"container\":\"video_detail_container__1w-MH\",\"video\":\"video_detail_video__3MV-9\",\"thumbanils\":\"video_detail_thumbanils__6hykm\",\"metadata\":\"video_detail_metadata__ToiUy\",\"title\":\"video_detail_title__1MNrt\",\"channel\":\"video_detail_channel__7a3G6\",\"count\":\"video_detail_count__2P6J_\",\"comment\":\"video_detail_comment__3-php\",\"comments\":\"video_detail_comments__3NP2J\",\"commentBox\":\"video_detail_commentBox__1xzSJ\",\"commentIcon\":\"video_detail_commentIcon__3xfLi\",\"commentText\":\"video_detail_commentText__2D_GY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__gCwwT\",\"video\":\"video_item_video__hMa_r\",\"metadata\":\"video_item_metadata__26RNY\",\"title\":\"video_item_title__3v-Cm\",\"channel\":\"video_item_channel__2EBt2\",\"count\":\"video_item_count__1RA-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hamburgerMenu\":\"hamburger_hamburgerMenu__1ybsH\",\"item\":\"hamburger_item__1u3fw\",\"blind\":\"hamburger_blind__2YhM-\",\"maker\":\"hamburger_maker__5g0z0\"};","import React from \"react\";\r\nimport styles from \"./video_item.module.css\";\r\n\r\nconst VideoItem = ({ video, onSelected, parseIntView, diffDate }) => {\r\n  const { snippet } = video;\r\n  const handleCilck = () => {\r\n    window.scrollTo(0, 0);\r\n    onSelected(video);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.container} onClick={handleCilck}>\r\n      <div className={styles.video}>\r\n        <img\r\n          className={styles.thumbanils}\r\n          src={snippet.thumbnails && snippet.thumbnails.high.url}\r\n          alt=\"thumbanils\"\r\n        />\r\n        <div className={styles.metadata}>\r\n          <p className={styles.title}>\r\n            {video.snippet.title.length > 30\r\n              ? `${video.snippet.title.substr(0, 30)}...`\r\n              : video.snippet.title}\r\n          </p>\r\n          <p className={styles.channel}>{snippet.channelTitle}</p>\r\n          <div className={styles.count}>\r\n            <span>{`조회수 ${parseIntView(\r\n              video.statistics.viewCount\r\n            )}회 `}</span>\r\n            <span>{`· ${diffDate(video.snippet.publishedAt)}전`}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport styles from \"./video_loader.module.css\";\r\n\r\nconst Loader = () => (\r\n  <div className={styles.loaderContainer}>\r\n    <div className={styles.loader}></div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport VideoItem from \"../video_item/video_item\";\r\nimport Loader from \"../video_loader/video_loader\";\r\nimport styles from \"./video_list.module.css\";\r\n\r\nconst VideoList = ({\r\n  scrollTargetRef,\r\n  parseIntView,\r\n  diffDate,\r\n  isLoading,\r\n  videos,\r\n  onSelected,\r\n  searchCheck,\r\n}) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.videosContainer}>\r\n          <ul className={styles.videos}>\r\n            {videos.map((video) => {\r\n              return (\r\n                <VideoItem\r\n                  parseIntView={parseIntView}\r\n                  diffDate={diffDate}\r\n                  key={video.id}\r\n                  videoId={video.id}\r\n                  video={video}\r\n                  onSelected={onSelected}\r\n                  searchCheck={searchCheck}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n          <div ref={scrollTargetRef} className={styles.targetObserver}></div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(VideoList);\r\n","import React from \"react\";\r\nimport styles from \"./hamburger.module.css\";\r\n\r\nexport const toggleMenu = () => {\r\n  console.log(\"Hello❓\");\r\n};\r\n\r\nconst HamburgerMenu = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.hamburgerMenu}>\r\n        <a className={styles.item} href=\"/\">\r\n          <i className=\"fas fa-home\"></i>\r\n          <span>홈</span>\r\n        </a>\r\n        <div className={styles.item}>\r\n          <i className=\"fas fa-video\"></i>\r\n          <span>구독</span>\r\n        </div>\r\n        <div className={styles.item}>\r\n          <i className=\"fas fa-history\"></i>\r\n          <span>기록</span>\r\n        </div>\r\n        <div className={styles.item}>\r\n          <i className=\"fas fa-cog\"></i>\r\n          <span>설정</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.blind}></div>\r\n      <span className={styles.maker}>© 2021 IvanSelah</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HamburgerMenu;\r\n","import React, { useRef, useState } from \"react\";\r\nimport styles from \"./video_search.module.css\";\r\nimport HamburgerMenu from \"../video_hamburger/hamburger\";\r\nimport Hamburger from \"hamburger-react\";\r\n\r\nconst VideoSearch = ({ onSearch }) => {\r\n  const inputRef = useRef();\r\n  const [isOpen, setOpen] = useState(false);\r\n  const handleSearch = () => {\r\n    onSearch(inputRef.current.value);\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  const onClick = () => {\r\n    handleSearch();\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const toggleMe = () => {\r\n    isOpen ? setOpen(false) : setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && <HamburgerMenu />}\r\n      <header>\r\n        <div className={styles.navbar}>\r\n          <div className={styles.hamburger} onClick={toggleMe}>\r\n            <Hamburger toggled={isOpen} toggle={setOpen} size={35} />\r\n          </div>\r\n          <a href=\"/\" className={styles.moveHome}>\r\n            <i className={`fab fa-youtube ${styles.logo}`}></i>\r\n            <span>YourTube</span>\r\n          </a>\r\n          <div className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              ref={inputRef}\r\n              placeholder=\"검색\"\r\n              onKeyPress={onKeyPress}\r\n            />\r\n            <button type=\"submit\" onClick={onClick}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n          <div className={styles.defaultUser}>\r\n            <i className=\"fas fa-user\"></i>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoSearch;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./video_detail.module.css\";\r\n\r\nconst VideoDetail = ({\r\n  youtubeId,\r\n  comments,\r\n  parseIntView,\r\n  diffDate,\r\n  selectedVideo,\r\n  videos,\r\n  onSelected,\r\n}) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const backgroundColors = [\r\n    \"#55efc4\", //\r\n    \"#0984e3\",\r\n    \"#4834d4\",\r\n    \"#130f40\",\r\n    \"#fd79a8\",\r\n    \"#fdcb6e\",\r\n    \"#d63031\",\r\n    \"#182C61\",\r\n    \"#BDC581\",\r\n    \"#B33771\",\r\n  ];\r\n\r\n  const randomColor = () => {\r\n    const index = Math.floor(Math.random() * 8);\r\n    setIndex(index);\r\n  };\r\n\r\n  const clickVideoList = (video) => {\r\n    window.scrollTo(0, 0);\r\n    onSelected(video);\r\n    randomColor();\r\n  };\r\n\r\n  return (\r\n    <section className={styles.detail}>\r\n      <div>\r\n        <iframe\r\n          title=\"content\"\r\n          className={styles.player}\r\n          allow=\"fullscreen\"\r\n          frameBorder=\"0\"\r\n          src={`https://www.youtube.com/embed/${youtubeId}?autoplay=1`}\r\n        ></iframe>\r\n        <div className={styles.description}>\r\n          <span className={styles.tags}>\r\n            {selectedVideo.snippet.tags &&\r\n              selectedVideo.snippet.tags.map((tag, index) => {\r\n                const kr = /[ㄱ-ㅎㅏ-ㅣ가-힣]/g;\r\n                if (kr.test(tag)) {\r\n                  if (index <= 20) {\r\n                    return ` #${tag}`;\r\n                  }\r\n                }\r\n              })}\r\n          </span>\r\n          <h3>{selectedVideo.snippet.title}</h3>\r\n          <div className={styles.statistics}>\r\n            <div className={styles.views}>\r\n              {`조회수 \r\n          ${selectedVideo.statistics.viewCount //\r\n            .replace(\r\n              /\\B(?=(\\d{3})+(?!\\d))/g,\r\n              \",\"\r\n            )}회 · ${selectedVideo.snippet.publishedAt\r\n                .split(\"T\")[0] //\r\n                .replace(/-/g, \".\")} `}\r\n            </div>\r\n            <div className={styles.likeUnlike}>\r\n              {selectedVideo.statistics.likeCount && (\r\n                <div className={styles.like}>\r\n                  <i className=\"far fa-thumbs-up\"></i>\r\n                  {`\r\n                  ${selectedVideo.statistics.likeCount //\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}\r\n                </div>\r\n              )}\r\n              {selectedVideo.statistics.dislikeCount && (\r\n                <div className={styles.unlike}>\r\n                  <i className=\"far fa-thumbs-down\"></i>\r\n                  {`\r\n                  ${selectedVideo.statistics.dislikeCount //\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className={styles.channelBox}>\r\n            <span\r\n              className={styles.channelIcon}\r\n              style={{ backgroundColor: `${backgroundColors[index]}` }}\r\n            >\r\n              {selectedVideo.snippet.channelTitle.substr(0, 1)}\r\n            </span>\r\n            <span className={styles.channelTitle}>\r\n              {selectedVideo.snippet.channelTitle}\r\n            </span>\r\n          </div>\r\n          <hr />\r\n          <span className={styles.comment}>\r\n            {selectedVideo.statistics.commentCount &&\r\n              `댓글 ${selectedVideo.statistics.commentCount //\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}개`}\r\n          </span>\r\n          <div className={styles.comments}>\r\n            {comments.map((comment) => {\r\n              const commentIndex = Math.floor(\r\n                Math.random() * backgroundColors.length\r\n              );\r\n              return (\r\n                <div\r\n                  className={styles.commentBox}\r\n                  key={Math.floor(Math.random() * 10000000)}\r\n                >\r\n                  <span\r\n                    className={styles.commentIcon}\r\n                    style={{\r\n                      backgroundColor: `${backgroundColors[commentIndex]}`,\r\n                    }}\r\n                  >\r\n                    {comment.authorDisplayName.substr(0, 2)}\r\n                  </span>\r\n                  <div className={styles.commentText}>\r\n                    <span>{`${diffDate(comment.publishedAt)}전`}</span>\r\n                    <span>\r\n                      {comment.textOriginal.length > 100\r\n                        ? `${comment.textOriginal.substr(0, 100)}...`\r\n                        : comment.textOriginal}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ul className={styles.videoList}>\r\n        {videos.map((video) => {\r\n          return (\r\n            <li\r\n              key={video.id}\r\n              className={styles.container}\r\n              onClick={() => clickVideoList(video)}\r\n            >\r\n              <div className={styles.video}>\r\n                <img\r\n                  className={styles.thumbanils}\r\n                  src={video.snippet.thumbnails.medium.url}\r\n                  alt=\"thumbanils\"\r\n                />\r\n                <div className={styles.hoverVideo}></div>\r\n                <div className={styles.metadata}>\r\n                  <p className={styles.title}>\r\n                    {video.snippet.title.length > 40\r\n                      ? `${video.snippet.title.substr(0, 35)}...`\r\n                      : video.snippet.title}\r\n                  </p>\r\n                  <p className={styles.channel}>{video.snippet.channelTitle}</p>\r\n                  <div className={styles.count}>\r\n                    <span>{`조회수 ${parseIntView(\r\n                      video.statistics.viewCount\r\n                    )}회 `}</span>\r\n                    <span>{`· ${diffDate(video.snippet.publishedAt)}전`}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport VideoList from \"./components/video_list/video_list\";\nimport VideoSearch from \"./components/video_search/video_search\";\nimport VideoDetail from \"./components/video_detail/video_detail\";\nimport Loader from \"./components/video_loader/video_loader\";\n\nfunction App({ youtube }) {\n  const scrollTargetRef = useRef();\n  const [videos, setVideos] = useState();\n  const [popularVideos, setPopularVideos] = useState([]);\n\n  const [searchQ, setSearchQ] = useState(null);\n  const [nextPageTok, setNextPageTok] = useState(null);\n  const [videosKey, setVideosKey] = useState();\n\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [youtubeId, setYoutubeId] = useState();\n  const [searchCheck, setSearchCheck] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    initialRander();\n  }, []);\n\n  useEffect(() => {\n    if (scrollTargetRef.current) {\n      createObserver();\n    }\n  }, [isLoading, nextPageTok]);\n\n  const initialRander = async () => {\n    try {\n      const {\n        data: { items },\n      } = await youtube.mostPopular();\n      setPopularVideos(items);\n    } catch {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createObserver = () => {\n    const target = scrollTargetRef.current;\n    const options = {\n      root: null,\n      threshold: 0,\n    };\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (entries[0].isIntersecting && searchQ) {\n        nextTokenVideos(searchQ);\n        observer && observer.disconnect();\n      }\n    }, options);\n    observer.observe(target);\n  };\n\n  const nextTokenVideos = async (keyword) => {\n    try {\n      const { data } = await youtube.nextSearch(keyword, nextPageTok);\n      const results = data.items.map((item) => item.id.videoId);\n      const overlap = results.filter((item) => !videosKey.includes(item));\n      const nextToken = data.nextPageToken;\n      setNextPageTok(nextToken);\n      onScrollCount(overlap);\n      setVideosKey(overlap);\n    } catch {}\n  };\n  const parseIntView = (view) => {\n    if (view >= 10000) {\n      return `${parseInt(view / 10000)}만`;\n    } else {\n      return view;\n    }\n  };\n\n  const diffDate = useCallback((date) => {\n    const curDate = new Date().getTime();\n    const itemDate = new Date(date).getTime();\n    let diff = curDate - itemDate;\n    diff = parseInt(diff / (1000 * 60 * 60));\n    if (diff < 24) {\n      return diff + \"시간\";\n    } else if (diff >= 24 && diff < 168) {\n      return parseInt(diff / 24) + \"일\";\n    } else if (diff >= 168 && diff < 672) {\n      return parseInt(diff / 168) + \"주\";\n    } else if (diff >= 672 && diff < 8760) {\n      return parseInt(diff / 672) + \"개월\";\n    } else if (diff >= 8760) {\n      return parseInt(diff / 8760) + \"년\";\n    }\n  }, []);\n\n  const getComments = async (youtubeId) => {\n    try {\n      const {\n        data: { items },\n      } = await youtube.comment(youtubeId);\n      const results = items.map((item) => {\n        return item.snippet.topLevelComment.snippet;\n      });\n      setComments(results);\n    } catch {}\n  };\n\n  const onSelected = (video) => {\n    setSelectedVideo(video);\n    setYoutubeId(video.id);\n    getComments(video.id);\n  };\n\n  const onScrollCount = async (results) => {\n    try {\n      const response = await Promise.all(\n        results.map((id) => {\n          return youtube.searchCount(id);\n        })\n      );\n      const addVideos = response.map((video) => video.data.items[0]);\n      setVideos([...videos, ...addVideos]);\n    } catch {}\n  };\n\n  const onSearchCount = async (results) => {\n    setIsLoading(true);\n    try {\n      const response = await Promise.all(\n        results.map((id) => {\n          return youtube.searchCount(id);\n        })\n      );\n      const addVideos = response.map((video) => video.data.items[0]);\n      setVideos(addVideos);\n    } catch {\n    } finally {\n      setSearchCheck(true);\n      setIsLoading(false);\n    }\n  };\n\n  const onSearch = async (keyword) => {\n    if (keyword === searchQ) {\n      return;\n    } else {\n      setSearchQ(keyword);\n      setIsLoading(true);\n      setSelectedVideo(null);\n    }\n    try {\n      const { data } = await youtube.search(keyword);\n      const results = data.items.map((item) => item.id.videoId);\n      const preToken = data.nextPageToken;\n      setVideosKey(results);\n      setNextPageTok(preToken);\n      onSearchCount(results);\n    } catch {\n    } finally {\n      window.scrollTo(0, 0);\n    }\n  };\n\n  return (\n    <>\n      <VideoSearch onSearch={onSearch} />\n      {isLoading ? (\n        <Loader />\n      ) : selectedVideo ? (\n        <VideoDetail\n          youtubeId={youtubeId}\n          comments={comments}\n          parseIntView={parseIntView}\n          diffDate={diffDate}\n          isLoading={isLoading}\n          selectedVideo={selectedVideo}\n          videos={searchQ ? videos : popularVideos}\n          onSelected={onSelected}\n        />\n      ) : (\n        <VideoList\n          scrollTargetRef={scrollTargetRef}\n          parseIntView={parseIntView}\n          diffDate={diffDate}\n          isLoading={isLoading}\n          videos={searchQ ? videos : popularVideos}\n          onSelected={onSelected}\n          searchCheck={searchCheck}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\nimport App from \"./app\";\nimport Youtube from \"./service/youtubeApi\";\n\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\r\n\r\nclass Youtube {\r\n  constructor(key) {\r\n    this.key = key;\r\n    this.api = axios.create({\r\n      baseURL: \"https://youtube.googleapis.com/youtube/v3/\",\r\n      params: {\r\n        key: this.key,\r\n        regionCode: \"kr\",\r\n      },\r\n    });\r\n  }\r\n\r\n  mostPopular = () => {\r\n    const response = this.api.get(\"videos\", {\r\n      params: {\r\n        part: \"snippet,statistics\",\r\n        chart: \"mostPopular\",\r\n        maxResults: 50,\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n\r\n  searchCount = (videoId) => {\r\n    const response = this.api.get(\"videos\", {\r\n      params: {\r\n        part: \"snippet,statistics\",\r\n        id: videoId,\r\n        maxResults: 25,\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n\r\n  search = (keyword) => {\r\n    const response = this.api.get(\"search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        type: \"video\",\r\n        maxResults: 25,\r\n        q: keyword,\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n\r\n  nextSearch = (keyword, nextPageTo) => {\r\n    const response = this.api.get(\"search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        type: \"video\",\r\n        maxResults: 25,\r\n        q: keyword,\r\n        pageToken: nextPageTo,\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n\r\n  comment = (videoId) => {\r\n    const response = this.api.get(\"commentThreads\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        videoId: videoId,\r\n        textFormat: \"plainText\",\r\n        order: \"time\",\r\n        maxResults: 25,\r\n      },\r\n    });\r\n    return response;\r\n  };\r\n}\r\n\r\nexport default Youtube;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"video_search_navbar__1o2Au\",\"hamburger\":\"video_search_hamburger__3sFja\",\"moveHome\":\"video_search_moveHome__38mbw\",\"logo\":\"video_search_logo__24MI_\",\"form\":\"video_search_form__3zpgX\",\"defaultUser\":\"video_search_defaultUser__1ETfC\"};"],"sourceRoot":""}